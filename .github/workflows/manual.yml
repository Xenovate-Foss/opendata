# This is a basic workflow that is manually triggered and runs on multiple OS platforms

name: Multi-OS Installation Script Test

# Controls when the action will run
on:
  push:
    branches: ["main"]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  install:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    
    # Define a matrix strategy to run on multiple operating systems
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Install on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        # Install expect
        sudo apt-get update
        sudo apt-get install -y expect
        
        # Create a script to download the installer
        cat > download_script.sh << 'EOF'
        #!/bin/bash
        curl -s https://opendata.xenovate.dpdns.org/docs/rexon/installer.sh > installer.sh
        chmod +x installer.sh
        EOF
        
        chmod +x download_script.sh
        ./download_script.sh
        
        # Create an expect script for Ubuntu
        cat > run_installer.exp << 'EOF'
        #!/usr/bin/expect -f
        
        # Set timeout
        set timeout 600
        
        # Run the installer
        spawn ./installer.sh
        
        # Handle JDK prompt - press Enter for default (17)
        expect {
          "Choose JDK version" { send "\r"; exp_continue }
          "Do you want to install PlayIt" { send "yes\r"; exp_continue }
          eof { exit 0 }
        }
        EOF
        
        chmod +x run_installer.exp
        ./run_installer.exp
        
    - name: Install on macOS
      if: matrix.os == 'macos-latest'
      run: |
        # Install expect
        brew install expect
        
        # Download the installer script
        curl -s https://opendata.xenovate.dpdns.org/docs/rexon/installer.sh > installer.sh
        chmod +x installer.sh
        
        # Create a more robust expect script for macOS
        cat > macos_install.exp << 'EOF'
        #!/usr/bin/expect -f
        
        # Set a longer timeout
        set timeout 1200
        
        # Run the installer
        spawn ./installer.sh
        
        # Wait for JDK prompt and send Enter to accept default
        expect "Choose JDK version*default: 17*: "
        send "\r"
        
        # Wait for PlayIt prompt and send yes
        expect "*PlayIt*"
        send "yes\r"
        
        # Wait for completion
        expect eof
        EOF
        
        # Make it executable
        chmod +x macos_install.exp
        
        # Run with detailed logging
        ./macos_install.exp
